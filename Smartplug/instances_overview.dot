strict digraph G {
		StartUp[fillcolor=darkseagreen3 style=filled label=<StartUp<BR />>];
StartUp -> StartUp [ label="vTaskDelay"];
StartUp -> StartUp [ label="vTaskDelete"];
		GatewayAddr[fillcolor=darkseagreen3 style=filled label=<GatewayAddr<BR />>];
GatewayAddr -> GatewayAddr [ label="vTaskDelay"];
GatewayAddr -> GatewayAddr [ label="vTaskDelay"];
GatewayAddr -> GatewayAddr [ label="vTaskDelete"];
		MQTT[fillcolor=darkseagreen3 style=filled label=<MQTT<BR />>];
MQTT -> MQTT [ label="vTaskDelay"];
MQTT -> MQTT [ label="vTaskDelay"];
MQTT -> MQTT [ label="vTaskDelay"];
		HTTPDaemon[fillcolor=darkseagreen3 style=filled label=<HTTPDaemon<BR />>];
HTTPDaemon -> xConfiguratorQueue [ label="xQueueGenericSend"];
HTTPDaemon -> xConfiguratorQueue [ label="xQueueGenericSend"];
		configConnect[fillcolor=darkseagreen3 style=filled label=<configConnect<BR />>];
configConnect -> MQTT [ label="xTaskCreate"];
configConnect -> PowerGet [ label="xTaskCreate"];
configConnect -> PowerGet [ label="xTaskCreate"];
configConnect -> configConnect [ label="vTaskDelay"];
configConnect -> RTOS [ label="xTaskGetCurrentTaskHandle"];
configConnect -> RTOS [ label="ulTaskNotifyTake"];
configConnect -> xConfiguratorQueue [ label="vQueueDelete"];
configConnect -> HTTPDaemon [ label="vTaskDelete"];
configConnect -> configConnect [ label="vTaskDelete"];
configConnect -> RTOS [ label="xTaskGetCurrentTaskHandle"];
configConnect -> RTOS [ label="xTaskGetCurrentTaskHandle"];
configConnect -> RTOS [ label="ulTaskNotifyTake"];
configConnect -> xConfiguratorQueue [ label="vQueueDelete"];
configConnect -> HTTPDaemon [ label="vTaskDelete"];
configConnect -> configConnect [ label="vTaskDelete"];
		Blink[fillcolor=darkseagreen3 style=filled label=<Blink<BR />>];
Blink -> Blink [ label="vTaskDelay"];
Blink -> Blink [ label="vTaskDelay"];
		PLCInit[fillcolor=darkseagreen3 style=filled label=<PLCInit<BR />>];
PLCInit -> PLCInit [ label="vTaskDelay"];
PLCInit -> PLCInit [ label="vTaskDelay"];
PLCInit -> PLCInit [ label="vTaskDelete"];
		PLCRcv[fillcolor=darkseagreen3 style=filled label=<PLCRcv<BR />>];
PLCRcv -> Regis [ label="xTaskCreate"];
PLCRcv -> RTOS [ label="ulTaskNotifyTake"];
PLCRcv -> xMqttQueue [ label="xQueueGenericSend"];
PLCRcv -> xPLCSendSemaphore [ label="xQueueGenericSend"];
PLCRcv -> xPLCSendSemaphore [ label="xQueueGenericSend"];
PLCRcv -> xPLCSendSemaphore [ label="xQueueGenericSend"];
		PLCSend[fillcolor=darkseagreen3 style=filled label=<PLCSend<BR />>];
PLCSend -> xPLCSendSemaphore [ label="xQueueGenericSend"];
PLCSend -> RTOS [ label="ulTaskNotifyTake"];
		PowerGet[fillcolor=darkseagreen3 style=filled label=<PowerGet<BR />>];
PowerGet -> PowerGet [ label="vTaskDelay"];
PowerGet -> RTOS [ label="vTaskDelayUntil"];
PowerGet -> RTOS [ label="vTaskDelayUntil"];
PowerGet -> RTOS [ label="vTaskDelayUntil"];
PowerGet -> RTOS [ label="vTaskDelayUntil"];
PowerGet -> RTOS [ label="vTaskDelayUntil"];
PowerGet -> RTOS [ label="vTaskDelayUntil"];
PowerGet -> RTOS [ label="vTaskDelayUntil"];
PowerGet -> xMqttQueue [ label="xQueueGenericSend"];
		Regis[fillcolor=darkseagreen3 style=filled label=<Regis<BR />>];
Regis -> xMqttQueue [ label="xQueueGenericSend"];
Regis -> Regis [ label="vTaskDelete"];
		xMqttQueue[fillcolor=orange style=filled label=<xMqttQueue<BR />>];
xMqttQueue -> MQTT [ label="xQueueReceive"];
		xConfiguratorQueue[fillcolor=orange style=filled label=<xConfiguratorQueue<BR />>];
xConfiguratorQueue -> configConnect [ label="xQueueReceive"];
		_Z17hostIntPinHandlerh[fillcolor=deepskyblue style=filled label=<_Z17hostIntPinHandlerh<BR />>];
_Z17hostIntPinHandlerh -> PLCRcv [ label="vTaskNotifyGiveFromISR"];
		xPLCSendSemaphore[fillcolor=ivory style=filled label=<xPLCSendSemaphore<BR />>];
xPLCSendSemaphore -> PLCSend [ label="xQueueSemaphoreTake"];
		main[fillcolor=salmon style=filled label=<main<BR />>];
main -> xPLCSendSemaphore [ label="xQueueCreateMutex"];
main -> StartUp [ label="xTaskCreate"];
main -> GatewayAddr [ label="xTaskCreate"];
main -> StartUp [ label="xTaskCreate"];
main -> xMqttQueue [ label="xQueueGenericCreate"];
main -> MQTT [ label="xTaskCreate"];
main -> xConfiguratorQueue [ label="xQueueGenericCreate"];
main -> HTTPDaemon [ label="xTaskCreate"];
main -> configConnect [ label="xTaskCreate"];
main -> Blink [ label="xTaskCreate"];
main -> PLCInit [ label="xTaskCreate"];
main -> PLCRcv [ label="xTaskCreate"];
main -> PLCSend [ label="xTaskCreate"];

}