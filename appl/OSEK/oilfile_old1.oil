{

	"OIL_VERSION" : ["2.5","test"], 	

	
	"IMPLEMENTATION" :  {
			
		"trampoline" : {
			"TASK" : {
				"STACKSIZE" :  500,
				"PRIORITY" : 1
			},
			"ISR" : {
				"STACKSIZE" : 500
			}
		}
	},
	
	//In oil cpu, just one OS has to be defined
    "OS": {
            "STATUS" : "EXTENDED",
            "ERRORHOOK" : "FALSE",
            "PRETASKHOOK" : "FALSE",
            "POSTTASKHOOK" : "FALSE",
            "STARTUPHOOK" : "FALSE",
            "SHUTDOWNHOOK" : "FALSE",
	},
	
	"APPMODE" : {
		"std" : { 
		}
	},
	
	//TASK  objects represent OSEK tasks
	"TASK" : {
		"taskContact":{
			//priority of task (UINT32)
			"PRIORITY" : 10,
			//autostart defines whether task is activated during system startup or application mode (BOOLEAN)
			//if TRUE list all appliction modes "AUTOSTART" = TRUE { APPMODE : "..." /n APPMODE : "..." }
  			"AUTOSTART" : {
				"TRUE" :{
					"APPMODE" : ["std"]
				}
			},
			//maximum number of queued activation requests (UINT32)
			"ACTIVATION" : 1,
			//preemptibility of task (NONE,FULL)
			"SCHEDULE" : "FULL",
			//list of resources accessed by the task
			"RESOURCE" : ["ResDistance"],
			//list of events the extended task may react to
			"EVENT" : ["EvDistance"]
			//list of messages accessed by the task
			//"MESSAGE" : "
		},

		"taskSend":{
			"PRIORITY" : 10,
			"AUTOSTART" : "FALSE",
			"ACTIVATION" : 1,
			"SCHEDULE" : "FULL",
			"RESOURCE" : ["ResDistance"],
			"EVENT" : ["EvDistance"]
		}
	},
	
	//COUNTER serves as a base for the ALARM mechanism
	"COUNTER" : {
		"SystemCounter" : {
			//maximum allowed counter value (UINT32)
			"MAXALLOWEDVALUE" : 10000,
			//number of ticks required to reach a counter specific unit (UINT32)
			"TICKSPERBASE" : 1,
			//minimum allowed number of counter ticks for a cycle (UINT32)
			"MINCYCLE" : 1
		}
	},
	
	//ALARM may be used to asynchronously inform or activate a specific task
	//it is possible to start alarms automatically at system start up depending on the application mode
	"ALARM" : {
		"AlarmContact" : {
		
			//counter which is referenced to this alarm
			"COUNTER" : "SystemCounter", 
			
			//type of notification when alarm expires (ACTIVATETASK or SETEVENT or ALARMCALLBACK)
			//ACTIVATETASK defines the task to be activated when the alarm expires (TASK)
			//SETEVENT defines the task for which the event is to be set
			//the EVENT reference parameter defines the event to be set when the alarm expires (TASK,EVENT)
			//ALARMCALLBACK defines the name of the callback routine that is called when the alarm expires (ALARMCALLBACKNAME)
			"ACTION" : {
				"ACTIVATETASK" : { 
					"TASK" : "taskContact"
				}
			},
			
			//defines if an alarm is started automatically at system start up depending on the application mode (BOOLEAN)
			//if TRUE, ALARMTIME(UINT32), CYCLETIME(UINT32) and APPMODES(APPMODE []) are defines
			"AUTOSTART" : {
				"TRUE" : {
					"ALARMTIME" : 100,
					"CYCLETIME" : 500,
					"APPMODE" : ["std","tmp"]
				}
			}
		}
	}, 


	//EVENT object is represented by its mask, the name of the event is a synonym for its mask
	"EVENT" : {
		"EvDistance" : {
			//integer number MASK (UINT64 or AUTO)
			"MASK" : 21
		}
	},
	
	//RESOURCE  object  is  used  to  coordinate  the  concurrent  access  by  tasks  and  ISRs  to  a shared resource
	//e.g. the scheduler, any program sequence, memory or any hardware area
	"RESOURCE" : {
		"ResDistance" : {
			//RESOURCEPROPERTY (STANDARD, LINKED, INTERNAL)
			//STANDARD, a normal RESOURCE that is not linked to another internal RESOURCE
			//LINKED, RESOURCE that is linked to another RESOURCE with property STANDARD or LINKED
			//the  resource  to  which  the  linking  shall  be  performed  is  defined  by  the  subattribute 
			//LINKEDRESOURCE  of  type  RESOURCE_TYPE
			//
			//"RESOURCEPROPERTY" : "STANDARD"
			//"RESOURCEPROPERTY" : {
			//	"LINKED" = "test"
			//}
			//INTERNAL, RESOURCE cannot accessed by the application
			"RESOURCEPROPERTY" : "STANDARD"
		}
	},
	
	//ISR objects represent OSEK interrupt service routines
	"ISR" : {
		"isr_button_start" : {
			//category of isr (UINT32, but only values 1 and 2 are allowed)
			"CATEGORY" : 2,
			//list of RESOURCES accessed by ISR
			"RESOURCE" : ["ResDistance"],
			//list of messages accessed by ISR
			"MESSAGE" : ["button_start"]
		}
	}
		//ISR objects represent OSEK interrupt service routines
	"MESSAGE" : {
		"isr_button_start" : {
			//defines the maximum number of messages that the queue for a queued message can store
			"QUEUESIZE" : 2,
			//list of messages accessed by ISR
			//A transmit message that is at the same time received internally and transmitted externally is
            //declared as external (using one of the SEND_xx_EXTERNAL properties). Internal receivers
            //of this message refer to it using the SENDINGMESSAGE attribute.
            //The property RECEIVE_ ZERO_SENDERS is used for messages with zero senders.
			"MESSAGEPROPERTY" : "RECEIVE_QUEUED_EXTERNAL",
			//The INITIALVALUE attribute is of type UINT64 and specifies 
			//the initial value of a MESSAGE.
			"INITIALVALUE" : 213
		}
	}
	
	
}
